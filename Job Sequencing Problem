class Solution 
{
    public:
    static bool cmp(Job a,Job b){
        return a.profit>b.profit;
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        sort(arr,arr+n,cmp);
        int count =0,maxProfit =0;
        int maxDeadline=-1e9;
        
        for(int i=0;i<n;i++){
            maxDeadline = max(maxDeadline,arr[i].dead);
        }
        vector<int>schedule(maxDeadline+1,-1);
        for(int i=0;i<n;i++){
            int currProfit =arr[i].profit;
            int currDeadline = arr[i].dead;
            int currjobId = arr[i].id;
            for(int k=currDeadline;k>0;k--){
                if(schedule[k]==-1){
                    
                    maxProfit += currProfit;
                    count++;
                    schedule[k] =currjobId ;
                    break;
                }
            }
        }
        vector<int>ans;
        ans.push_back(count);
        ans.push_back(maxProfit);
        return ans;
        
        
        
    } 
};
